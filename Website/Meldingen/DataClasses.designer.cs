#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Meldingen
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Meldingen")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBijlage(Bijlage instance);
    partial void UpdateBijlage(Bijlage instance);
    partial void DeleteBijlage(Bijlage instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertBron(Bron instance);
    partial void UpdateBron(Bron instance);
    partial void DeleteBron(Bron instance);
    partial void InsertMelding(Melding instance);
    partial void UpdateMelding(Melding instance);
    partial void DeleteMelding(Melding instance);
    partial void InsertMeldingHistorie(MeldingHistorie instance);
    partial void UpdateMeldingHistorie(MeldingHistorie instance);
    partial void DeleteMeldingHistorie(MeldingHistorie instance);
    partial void InsertOpmerking(Opmerking instance);
    partial void UpdateOpmerking(Opmerking instance);
    partial void DeleteOpmerking(Opmerking instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertBijlageContent(BijlageContent instance);
    partial void UpdateBijlageContent(BijlageContent instance);
    partial void DeleteBijlageContent(BijlageContent instance);
    partial void InsertToeTeWijzenAan(ToeTeWijzenAan instance);
    partial void UpdateToeTeWijzenAan(ToeTeWijzenAan instance);
    partial void DeleteToeTeWijzenAan(ToeTeWijzenAan instance);
    partial void InsertConfiguratie(Configuratie instance);
    partial void UpdateConfiguratie(Configuratie instance);
    partial void DeleteConfiguratie(Configuratie instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MeldingenConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bijlage> Bijlages
		{
			get
			{
				return this.GetTable<Bijlage>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<Bron> Brons
		{
			get
			{
				return this.GetTable<Bron>();
			}
		}
		
		public System.Data.Linq.Table<Melding> Meldings
		{
			get
			{
				return this.GetTable<Melding>();
			}
		}
		
		public System.Data.Linq.Table<MeldingHistorie> MeldingHistories
		{
			get
			{
				return this.GetTable<MeldingHistorie>();
			}
		}
		
		public System.Data.Linq.Table<Opmerking> Opmerkings
		{
			get
			{
				return this.GetTable<Opmerking>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<BijlageContent> BijlageContents
		{
			get
			{
				return this.GetTable<BijlageContent>();
			}
		}
		
		public System.Data.Linq.Table<ToeTeWijzenAan> ToeTeWijzenAans
		{
			get
			{
				return this.GetTable<ToeTeWijzenAan>();
			}
		}
		
		public System.Data.Linq.Table<Configuratie> Configuraties
		{
			get
			{
				return this.GetTable<Configuratie>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bijlage")]
	public partial class Bijlage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdMelding;
		
		private string _Naam;
		
		private string _BestandsNaam;
		
		private string _Mimetype;
		
		private bool _IsPrimaireFoto;
		
		private System.DateTime _AangemaaktOp;
		
		private string _AangemaaktDoor;
		
		private EntityRef<Melding> _Melding;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMeldingChanging(int value);
    partial void OnIdMeldingChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnBestandsNaamChanging(string value);
    partial void OnBestandsNaamChanged();
    partial void OnMimetypeChanging(string value);
    partial void OnMimetypeChanged();
    partial void OnIsPrimaireFotoChanging(bool value);
    partial void OnIsPrimaireFotoChanged();
    partial void OnAangemaaktOpChanging(System.DateTime value);
    partial void OnAangemaaktOpChanged();
    partial void OnAangemaaktDoorChanging(string value);
    partial void OnAangemaaktDoorChanged();
    #endregion
		
		public Bijlage()
		{
			this._Melding = default(EntityRef<Melding>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMelding", DbType="Int NOT NULL")]
		public int IdMelding
		{
			get
			{
				return this._IdMelding;
			}
			set
			{
				if ((this._IdMelding != value))
				{
					if (this._Melding.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMeldingChanging(value);
					this.SendPropertyChanging();
					this._IdMelding = value;
					this.SendPropertyChanged("IdMelding");
					this.OnIdMeldingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BestandsNaam", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string BestandsNaam
		{
			get
			{
				return this._BestandsNaam;
			}
			set
			{
				if ((this._BestandsNaam != value))
				{
					this.OnBestandsNaamChanging(value);
					this.SendPropertyChanging();
					this._BestandsNaam = value;
					this.SendPropertyChanged("BestandsNaam");
					this.OnBestandsNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mimetype", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Mimetype
		{
			get
			{
				return this._Mimetype;
			}
			set
			{
				if ((this._Mimetype != value))
				{
					this.OnMimetypeChanging(value);
					this.SendPropertyChanging();
					this._Mimetype = value;
					this.SendPropertyChanged("Mimetype");
					this.OnMimetypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimaireFoto", DbType="Bit NOT NULL")]
		public bool IsPrimaireFoto
		{
			get
			{
				return this._IsPrimaireFoto;
			}
			set
			{
				if ((this._IsPrimaireFoto != value))
				{
					this.OnIsPrimaireFotoChanging(value);
					this.SendPropertyChanging();
					this._IsPrimaireFoto = value;
					this.SendPropertyChanged("IsPrimaireFoto");
					this.OnIsPrimaireFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AangemaaktOp", DbType="SmallDateTime NOT NULL")]
		public System.DateTime AangemaaktOp
		{
			get
			{
				return this._AangemaaktOp;
			}
			set
			{
				if ((this._AangemaaktOp != value))
				{
					this.OnAangemaaktOpChanging(value);
					this.SendPropertyChanging();
					this._AangemaaktOp = value;
					this.SendPropertyChanged("AangemaaktOp");
					this.OnAangemaaktOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AangemaaktDoor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AangemaaktDoor
		{
			get
			{
				return this._AangemaaktDoor;
			}
			set
			{
				if ((this._AangemaaktDoor != value))
				{
					this.OnAangemaaktDoorChanging(value);
					this.SendPropertyChanging();
					this._AangemaaktDoor = value;
					this.SendPropertyChanged("AangemaaktDoor");
					this.OnAangemaaktDoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Melding_Bijlage", Storage="_Melding", ThisKey="IdMelding", OtherKey="Id", IsForeignKey=true)]
		public Melding Melding
		{
			get
			{
				return this._Melding.Entity;
			}
			set
			{
				Melding previousValue = this._Melding.Entity;
				if (((previousValue != value) 
							|| (this._Melding.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Melding.Entity = null;
						previousValue.Bijlages.Remove(this);
					}
					this._Melding.Entity = value;
					if ((value != null))
					{
						value.Bijlages.Add(this);
						this._IdMelding = value.Id;
					}
					else
					{
						this._IdMelding = default(int);
					}
					this.SendPropertyChanged("Melding");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Naam;
		
		private EntitySet<Melding> _Meldings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
		
		public Status()
		{
			this._Meldings = new EntitySet<Melding>(new Action<Melding>(this.attach_Meldings), new Action<Melding>(this.detach_Meldings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(100)")]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Melding", Storage="_Meldings", ThisKey="Id", OtherKey="IdStatus")]
		public EntitySet<Melding> Meldings
		{
			get
			{
				return this._Meldings;
			}
			set
			{
				this._Meldings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meldings(Melding entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_Meldings(Melding entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bron")]
	public partial class Bron : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Naam;
		
		private EntitySet<Melding> _Meldings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
		
		public Bron()
		{
			this._Meldings = new EntitySet<Melding>(new Action<Melding>(this.attach_Meldings), new Action<Melding>(this.detach_Meldings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(100)")]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bron_Melding", Storage="_Meldings", ThisKey="Id", OtherKey="IdBron")]
		public EntitySet<Melding> Meldings
		{
			get
			{
				return this._Meldings;
			}
			set
			{
				this._Meldings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meldings(Melding entity)
		{
			this.SendPropertyChanging();
			entity.Bron = this;
		}
		
		private void detach_Meldings(Melding entity)
		{
			this.SendPropertyChanging();
			entity.Bron = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Melding")]
	public partial class Melding : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdBron;
		
		private int _IdStatus;
		
		private System.DateTime _AangemaaktOp;
		
		private string _Melder;
		
		private string _Onderwerp;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private System.DateTime _GewijzigdOp;
		
		private string _GewijzigdDoor;
		
		private string _ToegewezenAan;
		
		private System.Nullable<System.DateTime> _DatumToegewezenAanGewijzigd;
		
		private EntitySet<Bijlage> _Bijlages;
		
		private EntitySet<MeldingHistorie> _MeldingHistories;
		
		private EntitySet<Opmerking> _Opmerkings;
		
		private EntitySet<BijlageContent> _BijlageContents;
		
		private EntityRef<Bron> _Bron;
		
		private EntityRef<Status> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdBronChanging(int value);
    partial void OnIdBronChanged();
    partial void OnIdStatusChanging(int value);
    partial void OnIdStatusChanged();
    partial void OnVerzondenOpChanging(System.DateTime value);
    partial void OnVerzondenOpChanged();
    partial void OnMelderChanging(string value);
    partial void OnMelderChanged();
    partial void OnOnderwerpChanging(string value);
    partial void OnOnderwerpChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnGewijzigdOpChanging(System.DateTime value);
    partial void OnGewijzigdOpChanged();
    partial void OnGewijzigdDoorChanging(string value);
    partial void OnGewijzigdDoorChanged();
    partial void OnToegewezenAanChanging(string value);
    partial void OnToegewezenAanChanged();
    partial void OnDatumToegewezenAanGewijzigdChanging(System.Nullable<System.DateTime> value);
    partial void OnDatumToegewezenAanGewijzigdChanged();
    #endregion
		
		public Melding()
		{
			this._Bijlages = new EntitySet<Bijlage>(new Action<Bijlage>(this.attach_Bijlages), new Action<Bijlage>(this.detach_Bijlages));
			this._MeldingHistories = new EntitySet<MeldingHistorie>(new Action<MeldingHistorie>(this.attach_MeldingHistories), new Action<MeldingHistorie>(this.detach_MeldingHistories));
			this._Opmerkings = new EntitySet<Opmerking>(new Action<Opmerking>(this.attach_Opmerkings), new Action<Opmerking>(this.detach_Opmerkings));
			this._BijlageContents = new EntitySet<BijlageContent>(new Action<BijlageContent>(this.attach_BijlageContents), new Action<BijlageContent>(this.detach_BijlageContents));
			this._Bron = default(EntityRef<Bron>);
			this._Status = default(EntityRef<Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBron", DbType="Int NOT NULL")]
		public int IdBron
		{
			get
			{
				return this._IdBron;
			}
			set
			{
				if ((this._IdBron != value))
				{
					if (this._Bron.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBronChanging(value);
					this.SendPropertyChanging();
					this._IdBron = value;
					this.SendPropertyChanged("IdBron");
					this.OnIdBronChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatus", DbType="Int NOT NULL")]
		public int IdStatus
		{
			get
			{
				return this._IdStatus;
			}
			set
			{
				if ((this._IdStatus != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStatusChanging(value);
					this.SendPropertyChanging();
					this._IdStatus = value;
					this.SendPropertyChanged("IdStatus");
					this.OnIdStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AangemaaktOp", DbType="SmallDateTime NOT NULL")]
		public System.DateTime VerzondenOp
		{
			get
			{
				return this._AangemaaktOp;
			}
			set
			{
				if ((this._AangemaaktOp != value))
				{
					this.OnVerzondenOpChanging(value);
					this.SendPropertyChanging();
					this._AangemaaktOp = value;
					this.SendPropertyChanged("VerzondenOp");
					this.OnVerzondenOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Melder", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Melder
		{
			get
			{
				return this._Melder;
			}
			set
			{
				if ((this._Melder != value))
				{
					this.OnMelderChanging(value);
					this.SendPropertyChanging();
					this._Melder = value;
					this.SendPropertyChanged("Melder");
					this.OnMelderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Onderwerp", DbType="VarChar(200)")]
		public string Onderwerp
		{
			get
			{
				return this._Onderwerp;
			}
			set
			{
				if ((this._Onderwerp != value))
				{
					this.OnOnderwerpChanging(value);
					this.SendPropertyChanging();
					this._Onderwerp = value;
					this.SendPropertyChanged("Onderwerp");
					this.OnOnderwerpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GewijzigdOp", DbType="SmallDateTime NOT NULL")]
		public System.DateTime GewijzigdOp
		{
			get
			{
				return this._GewijzigdOp;
			}
			set
			{
				if ((this._GewijzigdOp != value))
				{
					this.OnGewijzigdOpChanging(value);
					this.SendPropertyChanging();
					this._GewijzigdOp = value;
					this.SendPropertyChanged("GewijzigdOp");
					this.OnGewijzigdOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GewijzigdDoor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string GewijzigdDoor
		{
			get
			{
				return this._GewijzigdDoor;
			}
			set
			{
				if ((this._GewijzigdDoor != value))
				{
					this.OnGewijzigdDoorChanging(value);
					this.SendPropertyChanging();
					this._GewijzigdDoor = value;
					this.SendPropertyChanged("GewijzigdDoor");
					this.OnGewijzigdDoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToegewezenAan")]
		public string ToegewezenAan
		{
			get
			{
				return this._ToegewezenAan;
			}
			set
			{
				if ((this._ToegewezenAan != value))
				{
					this.OnToegewezenAanChanging(value);
					this.SendPropertyChanging();
					this._ToegewezenAan = value;
					this.SendPropertyChanged("ToegewezenAan");
					this.OnToegewezenAanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatumToegewezenAanGewijzigd")]
		public System.Nullable<System.DateTime> DatumToegewezenAanGewijzigd
		{
			get
			{
				return this._DatumToegewezenAanGewijzigd;
			}
			set
			{
				if ((this._DatumToegewezenAanGewijzigd != value))
				{
					this.OnDatumToegewezenAanGewijzigdChanging(value);
					this.SendPropertyChanging();
					this._DatumToegewezenAanGewijzigd = value;
					this.SendPropertyChanged("DatumToegewezenAanGewijzigd");
					this.OnDatumToegewezenAanGewijzigdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Melding_Bijlage", Storage="_Bijlages", ThisKey="Id", OtherKey="IdMelding")]
		public EntitySet<Bijlage> Bijlages
		{
			get
			{
				return this._Bijlages;
			}
			set
			{
				this._Bijlages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Melding_MeldingHistorie", Storage="_MeldingHistories", ThisKey="Id", OtherKey="IdMelding")]
		public EntitySet<MeldingHistorie> MeldingHistories
		{
			get
			{
				return this._MeldingHistories;
			}
			set
			{
				this._MeldingHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Melding_Opmerking", Storage="_Opmerkings", ThisKey="Id", OtherKey="IdMelding")]
		public EntitySet<Opmerking> Opmerkings
		{
			get
			{
				return this._Opmerkings;
			}
			set
			{
				this._Opmerkings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Melding_BijlageContent", Storage="_BijlageContents", ThisKey="Id", OtherKey="IdMelding")]
		public EntitySet<BijlageContent> BijlageContents
		{
			get
			{
				return this._BijlageContents;
			}
			set
			{
				this._BijlageContents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bron_Melding", Storage="_Bron", ThisKey="IdBron", OtherKey="Id", IsForeignKey=true)]
		public Bron Bron
		{
			get
			{
				return this._Bron.Entity;
			}
			set
			{
				Bron previousValue = this._Bron.Entity;
				if (((previousValue != value) 
							|| (this._Bron.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bron.Entity = null;
						previousValue.Meldings.Remove(this);
					}
					this._Bron.Entity = value;
					if ((value != null))
					{
						value.Meldings.Add(this);
						this._IdBron = value.Id;
					}
					else
					{
						this._IdBron = default(int);
					}
					this.SendPropertyChanged("Bron");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Melding", Storage="_Status", ThisKey="IdStatus", OtherKey="Id", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.Meldings.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.Meldings.Add(this);
						this._IdStatus = value.Id;
					}
					else
					{
						this._IdStatus = default(int);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bijlages(Bijlage entity)
		{
			this.SendPropertyChanging();
			entity.Melding = this;
		}
		
		private void detach_Bijlages(Bijlage entity)
		{
			this.SendPropertyChanging();
			entity.Melding = null;
		}
		
		private void attach_MeldingHistories(MeldingHistorie entity)
		{
			this.SendPropertyChanging();
			entity.Melding = this;
		}
		
		private void detach_MeldingHistories(MeldingHistorie entity)
		{
			this.SendPropertyChanging();
			entity.Melding = null;
		}
		
		private void attach_Opmerkings(Opmerking entity)
		{
			this.SendPropertyChanging();
			entity.Melding = this;
		}
		
		private void detach_Opmerkings(Opmerking entity)
		{
			this.SendPropertyChanging();
			entity.Melding = null;
		}
		
		private void attach_BijlageContents(BijlageContent entity)
		{
			this.SendPropertyChanging();
			entity.Melding = this;
		}
		
		private void detach_BijlageContents(BijlageContent entity)
		{
			this.SendPropertyChanging();
			entity.Melding = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeldingHistorie")]
	public partial class MeldingHistorie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdMelding;
		
		private int _IdBron;
		
		private int _IdStatus;
		
		private System.DateTime _AangemaaktOp;
		
		private string _Melder;
		
		private string _Onderwerp;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private System.DateTime _GewijzigdOp;
		
		private string _GewijzigdDoor;
		
		private EntityRef<Melding> _Melding;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMeldingChanging(int value);
    partial void OnIdMeldingChanged();
    partial void OnIdBronChanging(int value);
    partial void OnIdBronChanged();
    partial void OnIdStatusChanging(int value);
    partial void OnIdStatusChanged();
    partial void OnVerzondenOpChanging(System.DateTime value);
    partial void OnVerzondenOpChanged();
    partial void OnMelderChanging(string value);
    partial void OnMelderChanged();
    partial void OnOnderwerpChanging(string value);
    partial void OnOnderwerpChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnGewijzigdOpChanging(System.DateTime value);
    partial void OnGewijzigdOpChanged();
    partial void OnGewijzigdDoorChanging(string value);
    partial void OnGewijzigdDoorChanged();
    #endregion
		
		public MeldingHistorie()
		{
			this._Melding = default(EntityRef<Melding>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMelding", DbType="Int NOT NULL")]
		public int IdMelding
		{
			get
			{
				return this._IdMelding;
			}
			set
			{
				if ((this._IdMelding != value))
				{
					if (this._Melding.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMeldingChanging(value);
					this.SendPropertyChanging();
					this._IdMelding = value;
					this.SendPropertyChanged("IdMelding");
					this.OnIdMeldingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBron", DbType="Int NOT NULL")]
		public int IdBron
		{
			get
			{
				return this._IdBron;
			}
			set
			{
				if ((this._IdBron != value))
				{
					this.OnIdBronChanging(value);
					this.SendPropertyChanging();
					this._IdBron = value;
					this.SendPropertyChanged("IdBron");
					this.OnIdBronChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStatus", DbType="Int NOT NULL")]
		public int IdStatus
		{
			get
			{
				return this._IdStatus;
			}
			set
			{
				if ((this._IdStatus != value))
				{
					this.OnIdStatusChanging(value);
					this.SendPropertyChanging();
					this._IdStatus = value;
					this.SendPropertyChanged("IdStatus");
					this.OnIdStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AangemaaktOp", DbType="SmallDateTime NOT NULL")]
		public System.DateTime VerzondenOp
		{
			get
			{
				return this._AangemaaktOp;
			}
			set
			{
				if ((this._AangemaaktOp != value))
				{
					this.OnVerzondenOpChanging(value);
					this.SendPropertyChanging();
					this._AangemaaktOp = value;
					this.SendPropertyChanged("VerzondenOp");
					this.OnVerzondenOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Melder", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Melder
		{
			get
			{
				return this._Melder;
			}
			set
			{
				if ((this._Melder != value))
				{
					this.OnMelderChanging(value);
					this.SendPropertyChanging();
					this._Melder = value;
					this.SendPropertyChanged("Melder");
					this.OnMelderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Onderwerp", DbType="VarChar(200)")]
		public string Onderwerp
		{
			get
			{
				return this._Onderwerp;
			}
			set
			{
				if ((this._Onderwerp != value))
				{
					this.OnOnderwerpChanging(value);
					this.SendPropertyChanging();
					this._Onderwerp = value;
					this.SendPropertyChanged("Onderwerp");
					this.OnOnderwerpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(38,20)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GewijzigdOp", DbType="SmallDateTime NOT NULL")]
		public System.DateTime GewijzigdOp
		{
			get
			{
				return this._GewijzigdOp;
			}
			set
			{
				if ((this._GewijzigdOp != value))
				{
					this.OnGewijzigdOpChanging(value);
					this.SendPropertyChanging();
					this._GewijzigdOp = value;
					this.SendPropertyChanged("GewijzigdOp");
					this.OnGewijzigdOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GewijzigdDoor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string GewijzigdDoor
		{
			get
			{
				return this._GewijzigdDoor;
			}
			set
			{
				if ((this._GewijzigdDoor != value))
				{
					this.OnGewijzigdDoorChanging(value);
					this.SendPropertyChanging();
					this._GewijzigdDoor = value;
					this.SendPropertyChanged("GewijzigdDoor");
					this.OnGewijzigdDoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Melding_MeldingHistorie", Storage="_Melding", ThisKey="IdMelding", OtherKey="Id", IsForeignKey=true)]
		public Melding Melding
		{
			get
			{
				return this._Melding.Entity;
			}
			set
			{
				Melding previousValue = this._Melding.Entity;
				if (((previousValue != value) 
							|| (this._Melding.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Melding.Entity = null;
						previousValue.MeldingHistories.Remove(this);
					}
					this._Melding.Entity = value;
					if ((value != null))
					{
						value.MeldingHistories.Add(this);
						this._IdMelding = value.Id;
					}
					else
					{
						this._IdMelding = default(int);
					}
					this.SendPropertyChanged("Melding");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Opmerking")]
	public partial class Opmerking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdMelding;
		
		private string _Tekst;
		
		private System.DateTime _AangemaaktOp;
		
		private string _AangemaaktDoor;
		
		private EntityRef<Melding> _Melding;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMeldingChanging(int value);
    partial void OnIdMeldingChanged();
    partial void OnTekstChanging(string value);
    partial void OnTekstChanged();
    partial void OnAangemaaktOpChanging(System.DateTime value);
    partial void OnAangemaaktOpChanged();
    partial void OnAangemaaktDoorChanging(string value);
    partial void OnAangemaaktDoorChanged();
    #endregion
		
		public Opmerking()
		{
			this._Melding = default(EntityRef<Melding>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMelding", DbType="Int NOT NULL")]
		public int IdMelding
		{
			get
			{
				return this._IdMelding;
			}
			set
			{
				if ((this._IdMelding != value))
				{
					if (this._Melding.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMeldingChanging(value);
					this.SendPropertyChanging();
					this._IdMelding = value;
					this.SendPropertyChanged("IdMelding");
					this.OnIdMeldingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tekst", DbType="VarChar(MAX)")]
		public string Tekst
		{
			get
			{
				return this._Tekst;
			}
			set
			{
				if ((this._Tekst != value))
				{
					this.OnTekstChanging(value);
					this.SendPropertyChanging();
					this._Tekst = value;
					this.SendPropertyChanged("Tekst");
					this.OnTekstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AangemaaktOp", DbType="SmallDateTime NOT NULL")]
		public System.DateTime AangemaaktOp
		{
			get
			{
				return this._AangemaaktOp;
			}
			set
			{
				if ((this._AangemaaktOp != value))
				{
					this.OnAangemaaktOpChanging(value);
					this.SendPropertyChanging();
					this._AangemaaktOp = value;
					this.SendPropertyChanged("AangemaaktOp");
					this.OnAangemaaktOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AangemaaktDoor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AangemaaktDoor
		{
			get
			{
				return this._AangemaaktDoor;
			}
			set
			{
				if ((this._AangemaaktDoor != value))
				{
					this.OnAangemaaktDoorChanging(value);
					this.SendPropertyChanging();
					this._AangemaaktDoor = value;
					this.SendPropertyChanged("AangemaaktDoor");
					this.OnAangemaaktDoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Melding_Opmerking", Storage="_Melding", ThisKey="IdMelding", OtherKey="Id", IsForeignKey=true)]
		public Melding Melding
		{
			get
			{
				return this._Melding.Entity;
			}
			set
			{
				Melding previousValue = this._Melding.Entity;
				if (((previousValue != value) 
							|| (this._Melding.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Melding.Entity = null;
						previousValue.Opmerkings.Remove(this);
					}
					this._Melding.Entity = value;
					if ((value != null))
					{
						value.Opmerkings.Add(this);
						this._IdMelding = value.Id;
					}
					else
					{
						this._IdMelding = default(int);
					}
					this.SendPropertyChanged("Melding");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _AangemaaktOp;
		
		private string _Soort;
		
		private string _Omschrijving;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAangemaaktOpChanging(System.DateTime value);
    partial void OnAangemaaktOpChanged();
    partial void OnSoortChanging(string value);
    partial void OnSoortChanged();
    partial void OnOmschrijvingChanging(string value);
    partial void OnOmschrijvingChanged();
    #endregion
		
		public Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AangemaaktOp", DbType="SmallDateTime NOT NULL")]
		public System.DateTime AangemaaktOp
		{
			get
			{
				return this._AangemaaktOp;
			}
			set
			{
				if ((this._AangemaaktOp != value))
				{
					this.OnAangemaaktOpChanging(value);
					this.SendPropertyChanging();
					this._AangemaaktOp = value;
					this.SendPropertyChanged("AangemaaktOp");
					this.OnAangemaaktOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soort", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Soort
		{
			get
			{
				return this._Soort;
			}
			set
			{
				if ((this._Soort != value))
				{
					this.OnSoortChanging(value);
					this.SendPropertyChanging();
					this._Soort = value;
					this.SendPropertyChanged("Soort");
					this.OnSoortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Omschrijving", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string Omschrijving
		{
			get
			{
				return this._Omschrijving;
			}
			set
			{
				if ((this._Omschrijving != value))
				{
					this.OnOmschrijvingChanging(value);
					this.SendPropertyChanging();
					this._Omschrijving = value;
					this.SendPropertyChanged("Omschrijving");
					this.OnOmschrijvingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bijlage")]
	public partial class BijlageContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdMelding;
		
		private string _Naam;
		
		private string _BestandsNaam;
		
		private System.Data.Linq.Binary _Inhoud;
		
		private System.Data.Linq.Binary _ThumbnailSmall;
		
		private System.Data.Linq.Binary _ThumbnailBig;
		
		private string _Mimetype;
		
		private bool _IsPrimaireFoto;
		
		private System.DateTime _AangemaaktOp;
		
		private string _AangemaaktDoor;
		
		private EntityRef<Melding> _Melding;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMeldingChanging(int value);
    partial void OnIdMeldingChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnBestandsNaamChanging(string value);
    partial void OnBestandsNaamChanged();
    partial void OnInhoudChanging(System.Data.Linq.Binary value);
    partial void OnInhoudChanged();
    partial void OnThumbnailSmallChanging(System.Data.Linq.Binary value);
    partial void OnThumbnailSmallChanged();
    partial void OnThumbnailBigChanging(System.Data.Linq.Binary value);
    partial void OnThumbnailBigChanged();
    partial void OnMimetypeChanging(string value);
    partial void OnMimetypeChanged();
    partial void OnIsPrimaireFotoChanging(bool value);
    partial void OnIsPrimaireFotoChanged();
    partial void OnAangemaaktOpChanging(System.DateTime value);
    partial void OnAangemaaktOpChanged();
    partial void OnAangemaaktDoorChanging(string value);
    partial void OnAangemaaktDoorChanged();
    #endregion
		
		public BijlageContent()
		{
			this._Melding = default(EntityRef<Melding>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMelding", DbType="Int NOT NULL")]
		public int IdMelding
		{
			get
			{
				return this._IdMelding;
			}
			set
			{
				if ((this._IdMelding != value))
				{
					if (this._Melding.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMeldingChanging(value);
					this.SendPropertyChanging();
					this._IdMelding = value;
					this.SendPropertyChanged("IdMelding");
					this.OnIdMeldingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BestandsNaam", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string BestandsNaam
		{
			get
			{
				return this._BestandsNaam;
			}
			set
			{
				if ((this._BestandsNaam != value))
				{
					this.OnBestandsNaamChanging(value);
					this.SendPropertyChanging();
					this._BestandsNaam = value;
					this.SendPropertyChanged("BestandsNaam");
					this.OnBestandsNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inhoud", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Inhoud
		{
			get
			{
				return this._Inhoud;
			}
			set
			{
				if ((this._Inhoud != value))
				{
					this.OnInhoudChanging(value);
					this.SendPropertyChanging();
					this._Inhoud = value;
					this.SendPropertyChanged("Inhoud");
					this.OnInhoudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbnailSmall", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ThumbnailSmall
		{
			get
			{
				return this._ThumbnailSmall;
			}
			set
			{
				if ((this._ThumbnailSmall != value))
				{
					this.OnThumbnailSmallChanging(value);
					this.SendPropertyChanging();
					this._ThumbnailSmall = value;
					this.SendPropertyChanged("ThumbnailSmall");
					this.OnThumbnailSmallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbnailBig", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ThumbnailBig
		{
			get
			{
				return this._ThumbnailBig;
			}
			set
			{
				if ((this._ThumbnailBig != value))
				{
					this.OnThumbnailBigChanging(value);
					this.SendPropertyChanging();
					this._ThumbnailBig = value;
					this.SendPropertyChanged("ThumbnailBig");
					this.OnThumbnailBigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mimetype", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Mimetype
		{
			get
			{
				return this._Mimetype;
			}
			set
			{
				if ((this._Mimetype != value))
				{
					this.OnMimetypeChanging(value);
					this.SendPropertyChanging();
					this._Mimetype = value;
					this.SendPropertyChanged("Mimetype");
					this.OnMimetypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimaireFoto", DbType="Bit NOT NULL")]
		public bool IsPrimaireFoto
		{
			get
			{
				return this._IsPrimaireFoto;
			}
			set
			{
				if ((this._IsPrimaireFoto != value))
				{
					this.OnIsPrimaireFotoChanging(value);
					this.SendPropertyChanging();
					this._IsPrimaireFoto = value;
					this.SendPropertyChanged("IsPrimaireFoto");
					this.OnIsPrimaireFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AangemaaktOp", DbType="SmallDateTime NOT NULL")]
		public System.DateTime AangemaaktOp
		{
			get
			{
				return this._AangemaaktOp;
			}
			set
			{
				if ((this._AangemaaktOp != value))
				{
					this.OnAangemaaktOpChanging(value);
					this.SendPropertyChanging();
					this._AangemaaktOp = value;
					this.SendPropertyChanged("AangemaaktOp");
					this.OnAangemaaktOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AangemaaktDoor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AangemaaktDoor
		{
			get
			{
				return this._AangemaaktDoor;
			}
			set
			{
				if ((this._AangemaaktDoor != value))
				{
					this.OnAangemaaktDoorChanging(value);
					this.SendPropertyChanging();
					this._AangemaaktDoor = value;
					this.SendPropertyChanged("AangemaaktDoor");
					this.OnAangemaaktDoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Melding_BijlageContent", Storage="_Melding", ThisKey="IdMelding", OtherKey="Id", IsForeignKey=true)]
		public Melding Melding
		{
			get
			{
				return this._Melding.Entity;
			}
			set
			{
				Melding previousValue = this._Melding.Entity;
				if (((previousValue != value) 
							|| (this._Melding.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Melding.Entity = null;
						previousValue.BijlageContents.Remove(this);
					}
					this._Melding.Entity = value;
					if ((value != null))
					{
						value.BijlageContents.Add(this);
						this._IdMelding = value.Id;
					}
					else
					{
						this._IdMelding = default(int);
					}
					this.SendPropertyChanged("Melding");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ToeTeWijzenAan")]
	public partial class ToeTeWijzenAan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Naam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
		
		public ToeTeWijzenAan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Configuratie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id = default(int);
		
		private string _Naam;
		
		private string _Waarde;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnWaardeChanging(string value);
    partial void OnWaardeChanged();
    #endregion
		
		public Configuratie()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VARCHAR( 100 )", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Waarde", DbType="NVARCHAR( MAX )", CanBeNull=false)]
		public string Waarde
		{
			get
			{
				return this._Waarde;
			}
			set
			{
				if ((this._Waarde != value))
				{
					this.OnWaardeChanging(value);
					this.SendPropertyChanging();
					this._Waarde = value;
					this.SendPropertyChanged("Waarde");
					this.OnWaardeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
